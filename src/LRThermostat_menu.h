/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include "tcMenuTfteSpi.h"
#include <graphics/MenuTouchScreenEncoder.h>
#include <RuntimeMenuItem.h>
#include <EditableLargeNumberMenuItem.h>
#include <IoAbstraction.h>
#include <ArduinoEEPROMAbstraction.h>

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern TFT_eSPI tft;
extern TfteSpiDrawable tftDrawable;
extern GraphicsDeviceRenderer renderer;

// Any externals needed by IO expanders, EEPROMs etc


// Global Menu Item exports
extern ActionMenuItem menuSafePowerdown;
extern ActionMenuItem menuExitVar;
extern ActionMenuItem menuClearUsageCntrs;
extern ActionMenuItem menuDisplayUsageCntrs;
extern BackMenuItem menuBackUsageCounters;
extern SubMenuItem menuUsageCounters;
extern EditableLargeNumberMenuItem menuBaroRapidLoLimit;
extern EditableLargeNumberMenuItem menuBaroSteadyUpLimit;
extern AnalogMenuItem menuMinRunTime;
extern BackMenuItem menuBackMiscellaneous;
extern SubMenuItem menuMiscellaneous;
extern EditableLargeNumberMenuItem menuPressureCal;
extern EditableLargeNumberMenuItem menuTemperatureCal;
extern EditableLargeNumberMenuItem menuHumidityCal;
extern BackMenuItem menuBackSensorCalibration;
extern SubMenuItem menuSensorCalibration;
extern EditableLargeNumberMenuItem menuHumdHysteresis;
extern EditableLargeNumberMenuItem menuHeatingHysteresis;
extern EditableLargeNumberMenuItem menuCoolingHysteresis;
extern BackMenuItem menuBackHysteresis;
extern SubMenuItem menuHysteresis;
extern BackMenuItem menuBackThermostatSettings;
extern SubMenuItem menuThermostatSettings;
extern EnumMenuItem menuFanEnum;
extern EnumMenuItem menuModeEnum;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuModeEnum; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION BaroRapidLoLimitCallback(int id);
void CALLBACK_FUNCTION BaroSteadyUpLimitCallback(int id);
void CALLBACK_FUNCTION ClearUsageCntrs(int id);
void CALLBACK_FUNCTION CoolingHysteresisCallback(int id);
void CALLBACK_FUNCTION DisplayUsageCntrs(int id);
void CALLBACK_FUNCTION ExitCallback(int id);
void CALLBACK_FUNCTION FanCallback(int id);
void CALLBACK_FUNCTION HeatingHysteresisCallback(int id);
void CALLBACK_FUNCTION HumdHysteresisCallback(int id);
void CALLBACK_FUNCTION HumidityCalCallback(int id);
void CALLBACK_FUNCTION MinRunTimeCallback(int id);
void CALLBACK_FUNCTION ModeCallback(int id);
void CALLBACK_FUNCTION PressureCalCallback(int id);
void CALLBACK_FUNCTION SafePowerdown(int id);
void CALLBACK_FUNCTION TempCalCallback(int id);

#endif // MENU_GENERATED_CODE_H
